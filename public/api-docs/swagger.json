{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Barefoot Nomad API Documentation",
    "description": "Make company global travel and accommodation easy and convenient for the strong workforce of savvy members of staff, by leveraging the modern web.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "stackup2-barefoot-backend-stag.herokuapp.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "create an account",
        "tags": [
          "Sign up"
        ],
        "description": "User sign up endpoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User information",
            "in": "body",
            "description": "User information required for sign up",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/responses/signupSuccess"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/responses/signupFail"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User Login",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "email",
            "description": "Email for securing user's account"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "password",
            "description": "Password for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "This is how the response looks like when login is successful",
            "schema": {
              "$ref": "#/login-definition/login-response-real-data"
            }
          },
          "400": {
            "description": "This is how the response looks like when a user sends empty email, or empty password or both empty",
            "schema": {
              "$ref": "#/login-definition/login-response-empty-data"
            }
          },
          "401": {
            "description": "This is how the response looks like when a user sends wrong email or password",
            "schema": {
              "$ref": "#/login-definition/login-response-wrong-data"
            }
          }
        }
      }
    },
    "/auth/resetpassword": {
      "post": {
        "summary": "Reset email",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User email",
            "in": "body",
            "description": "email for a user ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resetEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is how the response looks like when user exist and an email is successful sent",
            "schema": {
              "$ref": "#/responses/reset-password-email-success"
            }
          },
          "400": {
            "description": "This is how the response looks like when there occured an error",
            "schema": {
              "$ref": "#/responses/reset-password-email-error"
            }
          },
          "403": {
            "description": "This is how the response looks like when a user does not exist",
            "schema": {
              "$ref": "#/responses/reset-password-email-fail"
            }
          }
        }
      }
    },
    "/auth/resetpassord/:token": {
      "post": {
        "summary": "update password",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User password",
            "in": "body",
            "description": "the new password ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updatePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is the response when password is updated",
            "schema": {
              "$ref": "#/responses/update-password-success"
            }
          },
          "400": {
            "description": "This is the response when occured an error while updating",
            "schema": {
              "$ref": "#/responses/reset-password-email-error"
            }
          }
        }
      }
    },
    "/trips":{
      "post": {
        "summary": "create a one way trip request",
        "produces": [
          "application/json"
        ],
        "consumes":[
          "application/json"
        ],
        "parameters": [
          {
            "name": "Travel from",
            "in": "body",
            "description": "a place where requester travels from",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneWaytripRequest"
            }
          },
          {
            "name": "Travel to",
            "in": "body",
            "description": "a place where requester wishes to travel to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneWaytripRequest"
            }
          },
          {
            "name": "Travel reason",
            "in": "body",
            "description": "the reason for the trip",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneWaytripRequest"
            }
          },
          {
            "name": "Travel date",
            "in": "body",
            "description": "date requester wishes to take the trip",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneWaytripRequest"
            }
          },
          {
            "name": "Travel type",
            "in": "body",
            "description": "the type of trip the requester wishes to make",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneWaytripRequest"
            }
          },
          {
            "name": "Accommodation",
            "in": "body",
            "description": "wether requester wants accommodation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneWaytripRequest"
            }
          }
        ],
        "responses": {
         "200":{
           "description":"Trip request successfuly created",
            "schema":{
            "$ref": "#/responses/trip-request-success"
          }
         },
         "400":{
           "description":"failed to create a trip request due to invalid input",
           "schema":{
             "$ref":"#/responses/trip-request-fail"
           }
         },
         "401":{
           "description":"access denied to protected resource",
           "schema":{
             "$ref":"#/responses/trip-request-unauthorized"
           }
         }
        }
      }
    }
  },
  "/api/auth/facebook":{
    "get": {
      "summary": "Login using facebook account",
      "produces": [
        "application/json"
      ],
      "consumes":[
        "application/x-www-form-urlencoded"
      ],
      "responses": {
       "200":{
         "description":"The user is successufully authenticated by facebook"
       }
      }
    }
  },
  "/api/auth/google":{
    "get": {
      "summary": "Login using google account",
      "produces": [
        "application/json"
      ],
      "consumes":[
        "application/x-www-form-urlencoded"
      ],
      "responses": {
       "200":{
         "description":"The user is successufully authenticated by google"
       }
      }
    }
  },
  "definitions": {
    "signup": {
      "properties": {
        "firstName": {
          "type": "string",
          "required": true,
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "required": true,
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "required": true,
          "example": "john@doe.com"
        },
        "address": {
          "type": "string",
          "required": true,
          "example": "Kigali, Rwanda"
        },
        "password": {
          "type": "string",
          "required": true,
          "example": "hellothere"
        },
        "gender": {
          "type": "string",
          "required": true,
          "example": "Male"
        }
      }
    },
    "incompleteSignup": {
      "properties": {
        "firstName": {
          "type": "string",
          "required": true,
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "required": true,
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "required": true,
          "example": "john@doe.com"
        },
        "address": {
          "type": "string",
          "required": true,
          "example": "Kigali, Rwanda"
        }
      }
    },
    "resetEmail": {
      "email": {
        "type": "string",
        "required": true,
        "example": "john@doe.com"
      }
    },
    "updatePassword": {
      "password": {
        "type": "string",
        "required": true,
        "example": "didiny"
      }
    },
    "OneWaytripRequest":{
      "travelFrom": {
        "type": "string",
        "required": true,
        "example": "Kigali"
      },
      "travelTo": {
        "type": "string",
        "required": true,
        "example": "Butare"
      },
      "travelReason": {
        "type": "string",
        "required": true,
        "example": "Business meeting"
      },
      "travelDate": {
        "type": "date",
        "required": true,
        "example": "2020-03-14T15:12:22.360Z"
      },
      "travelType": {
        "type": "string",
        "required": true,
        "example": "One-way"
      },
      "accommodation": {
        "type": "boolean",
        "required": true,
        "example": true
      }
    }
  },
  "responses": {
    "signupSuccess": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Account created successfully"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR....."
        }
      }
    },
    "signupFail": {
      "properties": {
        "error": {
          "type": "string",
          "example": "Sign up failed! Please try again later"
        }
      }
    },
    "reset-password-email-success": {
      "properties": {
        "message": {
          "type": "string",
          "example": "The email has sent successful"
        }
      }
    },
    "reset-password-email-fail": {
      "properties": {
        "error": {
          "type": "string",
          "example": "User does not exist"
        }
      }
    },
    "reset-password-email-error": {
      "properties": {
        "error": {
          "type": "string",
          "example": "occured a error"
        }
      }
    },
    "update-password-success": {
      "properties": {
        "message": {
          "type": "string",
          "example": "password changed"
        }
      }
    },
    "update-password-fail": {
      "properties": {
        "error": {
          "type": "string",
          "example": "User does not exist"
        }
      }
    },
    "trip-request-success":{
      "properties":{
        "message":{
          "type":"string",
          "example":"trip request successfuly created and waiting for manager approval"
        }
      }
    },
    "trip-request-fail":{
      "properties":{
        "error":{
          "type":"string",
          "example":"you must provide a valid date value for \"travel date\""
        }
      }
    },
    "trip-request-unauthorized":{
      "properties":{
        "message":{
          "type":"string",
          "example":"access denied, you must login to use this resource"
        }
      }
    }
  },
  "login-definition": {
    "login-response-real-data": {
      "properties": {
        "message": {
          "type": "string",
          "example": "successfully logged in"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        }
      }
    },
    "login-response-wrong-data": {
      "properties": {
        "message": {
          "type": "string",
          "example": "unknown credentials"
        }
      }
    },
    "login-response-empty-data": {
      "properties": {
        "message": {
          "type": "string",
          "example": "enter your email or password"
        }
      }
    }
  }
}
